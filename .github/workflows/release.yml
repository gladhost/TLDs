name: Release

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 24
  PYTHON_VERSION: 3.13

jobs:
  lint-test:
    name: Run Lint Test Workflow
    permissions:
      issues: write
      pull-requests: write
    uses: ./.github/workflows/lint-test.yml
    secrets: inherit

  release:
    name: Generate Release Tag
    runs-on: ubuntu-latest
    needs: [lint-test]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      - name: Install Dependencies
        run: npm install --save-dev @semantic-release/{commit-analyzer,exec,git,github,release-notes-generator,npm} semantic-release-pypi

      - name: Create .releaserc.json
        run: |
          cat << EOF > .releaserc.json
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/github",
              [
                "@semantic-release/npm",
                {
                  "pkgRoot": "node"
                }
              ],
              [
                "semantic-release-pypi",
                {
                  "srcDir": "python"
                }
              ],
              [
                "@semantic-release/git",
                {
                  "assets": ["node/package.json", "python/pyproject.toml"],
                  "message": "chore(release): \${nextRelease.version} [skip ci]\n\n\${nextRelease.notes}"
                }
              ],
              [
                "@semantic-release/exec",
                {
                  "prepareCmd": "make download && docker compose run --rm node"
                }
              ]
            ]
          }
          EOF

      - name: Run Semantic Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

        run: npx semantic-release
